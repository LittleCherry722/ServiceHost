//************************************************************************//
// Default: all
// Example: @include prefixer(border-radius, $radii, $o: false);
//************************************************************************//
@mixin prefixer ($property, $value,
                 $webkit: true,
                    $moz: true,
                     $ms: true,
                      $o: true,
                   $spec: true) {
  @if $webkit { -webkit-#{$property}: $value; }
  @if $moz    {    -moz-#{$property}: $value; }
  @if $ms     {     -ms-#{$property}: $value; }
  @if $o      {      -o-#{$property}: $value; }
  @if $spec   {         #{$property}: $value; }
}



// CSS3 Flexible Box Model and property defaults

// Custom shorthand notation for flexbox
@mixin box($orient: inline-axis, $pack: start, $align: stretch) {
  @include display-box;
  @include box-orient($orient);
  @include box-pack($pack);
  @include box-align($align);
}

@mixin display-box {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-box;
  display: -o-box;
  display: box;
  display: flex;
}

@mixin box-orient($orient: inline-axis) {
// horizontal|vertical|inline-axis|block-axis|inherit
  @include prefixer(box-orient, $orient);
}

@mixin box-pack($pack: start) {
// start|end|center|justify
  @include prefixer(box-pack, $pack);
}

@mixin box-align($align: stretch) {
// start|end|center|baseline|stretch
  @include prefixer(box-align, $align);
}

@mixin box-direction($direction: normal) {
// normal|reverse|inherit
  @include prefixer(box-direction, $direction);
}

@mixin box-lines($lines: single) {
// single|multiple
  @include prefixer(box-lines, $lines);
}

@mixin box-ordinal-group($int: 1) {
  @include prefixer(box-ordinal-group, $int);
}

@mixin box-flex($value: 0.0) {
  @include prefixer(box-flex, $value);
  flex: $value;
}

@mixin box-flex-group($int: 1) {
  @include prefixer(box-flex-group, $int);
}
